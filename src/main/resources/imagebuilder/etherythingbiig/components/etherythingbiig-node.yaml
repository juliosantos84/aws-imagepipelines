name: EtherythingbiigNodeProvisioner
description: Provisions an etherythingbiig node.
schemaVersion: 1.0
parameters:
  - SCRIPTS_S3_URL:
      type: string
      default: "${{SCRIPTS_S3_URL}}"
      description: The S3 URL for the scripts asset.
  - SERVICES_S3_URL:
      type: string
      default: "${{SERVICES_S3_URL}}"
      description: The S3 URL for the services asset.
  - GETH_VERSION:
      type: string
      default: "${{GETH_VERSION}}"
      description: The geth version to install.
  - LIGHTHOUSE_VERSION:
      type: string
      default: "${{LIGHTHOUSE_VERSION}}"
      description: The lighthouse version to install.
phases:
  - name: 'build'
    steps:
      - name: InstallCfnBootstrap
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 60
        maxAttempts: 1
        inputs:
          commands:
            - set -x
            - |
              AWS_ROOT=/opt/aws
              sudo mkdir -p ${AWS_ROOT}
              sudo chown -R ubuntu:users ${AWS_ROOT}
              curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz --output /tmp/aws-cfn-bootstrap-py3-latest.tar.gz
              tar -xvf /tmp/aws-cfn-bootstrap-py3-latest.tar.gz -C /tmp/
              mv /tmp/aws-cfn-bootstrap-2.0/* ${AWS_ROOT}
              # I hate this, but couldn't pass the right params to the install script
              cd ${AWS_ROOT}
              sudo python3 ${AWS_ROOT}/setup.py install --prefix ${AWS_ROOT} --install-lib /usr/lib/python3.8
              sudo chmod +x ${AWS_ROOT}/bin/*
              sudo ln -s ${AWS_ROOT}/bin/cfn-hup /etc/init.d/cfn-hup
      - name: InstallCommonUtils
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 60
        maxAttempts: 1
        inputs:
          commands:
            - set -x
            - sudo apt update
            - sudo apt install awscli jq unzip -y
      - name: CreateGethUsers
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
            - sudo useradd --no-create-home --shell /bin/false goeth
      - name: InstallGethBinaries
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - |
            BINARY_NAME=geth-linux-amd64-{{GETH_VERSION}}
            ARCHIVE_NAME=$BINARY_NAME.tar.gz
            curl -L https://gethstore.blob.core.windows.net/builds/$ARCHIVE_NAME --output /tmp/$ARCHIVE_NAME
            sudo tar -xvf /tmp/$ARCHIVE_NAME
            sudo mv ./$BINARY_NAME/geth /usr/local/bin/geth
      - name: CreateLighthouseUsers
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - sudo useradd --no-create-home --shell /bin/false lighthousebeacon
          - sudo useradd --no-create-home --shell /bin/false lighthousevalidator
      - name: InstallLighthouseBinaries
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - |
            LIGHTHOUSE_ARCHIVE=lighthouse-{{LIGHTHOUSE_VERSION}}-x86_64-unknown-linux-gnu.tar.gz
            LIGHTHOUSE_DOWNLOAD_URL=https://github.com/sigp/lighthouse/releases/download/{{LIGHTHOUSE_VERSION}}/${LIGHTHOUSE_ARCHIVE}
            DOWNLOAD_DIR=/tmp
            echo "Downloading ${LIGHTHOUSE_DOWNLOAD_URL} (${LIGHTHOUSE_ARCHIVE}) to ${DOWNLOAD_DIR}/${LIGHTHOUSE_ARCHIVE}"
            curl -L ${LIGHTHOUSE_DOWNLOAD_URL} --output ${DOWNLOAD_DIR}/${LIGHTHOUSE_ARCHIVE}
            tar -xvf ${DOWNLOAD_DIR}/${LIGHTHOUSE_ARCHIVE}
            sudo mv lighthouse /usr/local/bin/lighthouse
            sudo chown lighthousebeacon:users /usr/local/bin/lighthouse
      - name: InstallScripts
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - aws s3 cp {{SCRIPTS_S3_URL}} /tmp/scripts.zip
          - sudo unzip /tmp/scripts.zip -d /usr/local/bin           
          - sudo chmod 755 /usr/local/bin/*-goeth-volume.sh
          - sudo chmod 755 /usr/local/bin/general/*.sh
          - sudo mv /usr/local/bin/general/*.sh /usr/local/bin
          - sudo chown lighthousebeacon:lighthousebeacon /usr/local/bin/*.sh
          - sudo chown goeth:goeth /usr/local/bin/*-goeth-volume.sh
      - name: InstallServices
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - aws s3 cp {{SERVICES_S3_URL}} /tmp/services.zip
          - sudo unzip /tmp/services.zip -d /etc/systemd/system
          - sudo systemctl daemon-reload
  - name: 'test'
    steps:
      - name: TestGethInstall
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - id -u goeth
          - "[ -x /usr/local/bin/geth ]"
          - "geth version | grep Version | grep {{GETH_VERSION}}-stable"
      - name: TestLighthouseInstall
        action: ExecuteBash
        onFailure: Abort
        timeoutSeconds: 30
        maxAttempts: 1
        inputs:
          commands:
          - set -x
          - id -u lighthousebeacon
          - id -u lighthousevalidator
          - "[ -x /usr/local/bin/lighthouse ]"
          - "lighthouse --version | grep {{LIGHTHOUSE_VERSION}}"